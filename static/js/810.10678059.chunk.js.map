{"version":3,"file":"static/js/810.10678059.chunk.js","mappings":"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","sources":["components/TodoInput.jsx","components/Todo.jsx","components/TodoList.jsx","api/todo.js","pages/Todo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoInputComponent = styled.form`\n  width: 100%;\n  height: 64px;\n  display: flex;\n  border: 1px solid #eee;\n  border-radius: 10px;\n  margin: 24px 0;\n  input {\n    width: 100%;\n    padding: 8px;\n    font-size: 16px;\n    font-weight: 700;\n    margin: 16px;\n    border: none;\n    background: #fff;\n    color: #202020;\n  }\n  button {\n    all: unset;\n    width: 80px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    font-weight: 700;\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n  }\n`;\n\nfunction TodoInput({ screenMode, todosAddHandler }) {\n  const [todo, setTodo] = useState(\"\");\n\n  const onChangeHandler = (e) => setTodo(e.target.value);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    todosAddHandler(todo);\n    setTodo(\"\");\n  };\n  return (\n    <TodoInputComponent screenMode={screenMode} onSubmit={submitHandler}>\n      <input placeholder=\"new Todo..\" onChange={onChangeHandler} value={todo} />\n      <button>+</button>\n    </TodoInputComponent>\n  );\n}\n\nexport default TodoInput;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { BsCheckSquareFill, BsCheckSquare, BsPencil } from \"react-icons/bs\";\nimport { TiDeleteOutline } from \"react-icons/ti\";\n\nconst TodoComponent = styled.div`\n  width: 100%;\n  .todo {\n    box-sizing: border-box;\n    width: 100%;\n    height: 64px;\n    display: flex;\n    justify-content: space-between;\n    padding: 16px;\n    align-items: center;\n    font-weight: 700;\n    border-bottom: 1px solid #eee;\n    input {\n      width: 100%;\n      padding: 8px;\n      font-size: 16px;\n      font-weight: 700;\n      margin: 16px;\n    }\n    &.done {\n      span {\n        color: ${({ screenMode }) => (screenMode ? \"#B2B2B2\" : \"#B2B2B2\")};\n        text-decoration: line-through;\n      }\n    }\n    .action-icons {\n      font-size: 20px;\n      display: flex;\n      .action-icon {\n        cursor: pointer;\n        margin: 8px;\n      }\n    }\n  }\n  button {\n    width: 50px;\n    height: 25px;\n    margin-right: 10px;\n    cursor: pointer;\n  }\n`;\n\nfunction Todo({ data, deleteHandler, todosUpdateHandler }) {\n  const { todo, isCompleted, id } = data;\n  const [change, setChange] = useState(false);\n  const [newTodo, setNewTodo] = useState(todo);\n  const inputRef = useRef();\n  const changeHandler = () => {\n    setChange(!change);\n    if (change) {\n      todosUpdateHandler(id, newTodo, false);\n    }\n  };\n  const updateCancel = () => {\n    setChange(false);\n    setNewTodo(todo);\n  };\n  return (\n    <TodoComponent>\n      <div className={isCompleted ? \"todo done\" : \"todo\"}>\n        <span>\n          {change ? (\n            <input\n              value={newTodo}\n              onChange={(e) => setNewTodo(e.target.value)}\n              ref={inputRef}\n            />\n          ) : (\n            todo\n          )}\n        </span>\n        {change ? (\n          <div className=\"action-icons\">\n            <button onClick={changeHandler}>수정</button>\n            <button onClick={updateCancel}>취소</button>\n          </div>\n        ) : (\n          <div className=\"action-icons\">\n            <div\n              className=\"action-icon complete\"\n              onClick={() => todosUpdateHandler(id, false, true)}\n            >\n              {isCompleted ? <BsCheckSquareFill /> : <BsCheckSquare />}\n            </div>\n            <div className=\"action-icon\" onClick={changeHandler}>\n              <BsPencil />\n            </div>\n            <div\n              className=\"action-icon delete\"\n              onClick={() => deleteHandler(id)}\n            >\n              <TiDeleteOutline />\n            </div>\n          </div>\n        )}\n      </div>\n    </TodoComponent>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Todo from \"./Todo\";\n\nconst TodoListComponent = styled.div`\n  border: 1px solid #eee;\n  border-bottom: none;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n`;\n\nfunction TodoList({ todos, deleteHandler, todosUpdateHandler }) {\n  return (\n    <TodoListComponent>\n      {todos.map((v) => (\n        <Todo\n          data={v}\n          key={v.id}\n          deleteHandler={deleteHandler}\n          todosUpdateHandler={todosUpdateHandler}\n        />\n      ))}\n    </TodoListComponent>\n  );\n}\n\nexport default TodoList;\n","import axios from \"axios\";\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nconst getHeaders = () => {\r\n  const headers = {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"access_token\"),\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return headers;\r\n};\r\n\r\nexport const createTodo = async (data) => {\r\n  try {\r\n    const headers = getHeaders();\r\n    const res = axios.post(`${SERVER_URL}/todos`, data, headers);\r\n    return res;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getTodos = async () => {\r\n  try {\r\n    const headers = getHeaders();\r\n    const res = axios.get(`${SERVER_URL}/todos`, headers);\r\n    return res;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const updateTodo = async (id, data) => {\r\n  try {\r\n    const headers = getHeaders();\r\n    const res = axios.put(`${SERVER_URL}/todos/${id}`, data, headers);\r\n    return res;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const deleteTodo = async (id) => {\r\n  try {\r\n    const headers = getHeaders();\r\n    const res = axios.delete(`${SERVER_URL}/todos/${id}`, headers);\r\n    return res;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoInput from \"../components/TodoInput\";\r\nimport TodoList from \"../components/TodoList\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getTodos, deleteTodo, updateTodo, createTodo } from \"../api/todo\";\r\n\r\nconst TodoPage = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  padding-top: 8rem;\r\n  overflow: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #fff;\r\n  color: #202020;\r\n`;\r\nconst TodoContainer = styled.div`\r\n  width: 720px;\r\n  height: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  header {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    h1 {\r\n      height: 3rem;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 1rem 0;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      letter-spacing: 0.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Todo() {\r\n  const navigate = useNavigate();\r\n  const [todos, setTodos] = useState([]);\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n    if (!accessToken) navigate(\"/\");\r\n    else getData();\r\n  }, []);\r\n\r\n  const todosAddHandler = async (todo) => {\r\n    try {\r\n      const res = await createTodo({ todo });\r\n      setTodos([...todos, res.data]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const todosUpdateHandler = async (id, todo, complete) => {\r\n    try {\r\n      const newDatas = todos.map((v) => {\r\n        if (v.id === id) {\r\n          if (todo) v.todo = todo;\r\n          if (complete) v.isCompleted = !v.isCompleted;\r\n        }\r\n        return v;\r\n      });\r\n      const newData = newDatas.filter((v) => v.id === id)[0];\r\n      await updateTodo(id, newData);\r\n      setTodos(newDatas);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    try {\r\n      const newDatas = [...todos].filter((v) => v.id !== id);\r\n      setTodos(newDatas);\r\n      deleteTodo(id);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const getData = async () => {\r\n    try {\r\n      const res = await getTodos();\r\n      setTodos(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TodoPage>\r\n      <TodoContainer>\r\n        <header>\r\n          <h1>Todo-List</h1>\r\n        </header>\r\n\r\n        <TodoInput todosAddHandler={todosAddHandler} getData={getData} />\r\n        {todos && (\r\n          <TodoList\r\n            todos={todos}\r\n            deleteHandler={deleteHandler}\r\n            todosUpdateHandler={todosUpdateHandler}\r\n          />\r\n        )}\r\n      </TodoContainer>\r\n    </TodoPage>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n"],"names":["TodoInputComponent","styled","screenMode","todosAddHandler","useState","todo","setTodo","onSubmit","e","preventDefault","placeholder","onChange","target","value","TodoComponent","data","deleteHandler","todosUpdateHandler","isCompleted","id","change","setChange","newTodo","setNewTodo","inputRef","useRef","changeHandler","className","ref","onClick","TodoListComponent","todos","map","v","getHeaders","headers","Authorization","localStorage","getItem","createTodo","res","axios","process","console","log","getTodos","updateTodo","deleteTodo","TodoPage","TodoContainer","navigate","useNavigate","setTodos","useEffect","getData","complete","newDatas","newData","filter","err"],"sourceRoot":""}